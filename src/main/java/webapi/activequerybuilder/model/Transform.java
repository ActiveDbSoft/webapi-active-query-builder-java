/**
 * QueryBuilderApi
 * Active Query Builder Web API lets create, analyze and modify SQL queries for different database servers using RESTful HTTP requests to a cloud-based service. It requires SQL execution context (information about database schema and used database server) to be stored under the registered account at https://webapi.activequerybuilder.com/.
 *
 * OpenAPI spec version: 1.1.3
 * Contact: support@activedbsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package webapi.activequerybuilder.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import webapi.activequerybuilder.model.ConditionGroup;
import webapi.activequerybuilder.model.HiddenColumn;
import webapi.activequerybuilder.model.Pagination;
import webapi.activequerybuilder.model.Sorting;
import webapi.activequerybuilder.model.Totals;


/**
 * SQL transformation parameters and commands.
 */
@ApiModel(description = "SQL transformation parameters and commands.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-08-31T16:54:02.057+06:00")
public class Transform   {
  @JsonProperty("Guid")
  private String guid = null;

  @JsonProperty("Sql")
  private String sql = null;

  @JsonProperty("Pagination")
  private Pagination pagination = null;

  @JsonProperty("Totals")
  private List<Totals> totals = new ArrayList<Totals>();

  @JsonProperty("Sortings")
  private List<Sorting> sortings = new ArrayList<Sorting>();

  @JsonProperty("Filter")
  private ConditionGroup filter = null;

  @JsonProperty("HiddenColumns")
  private List<HiddenColumn> hiddenColumns = new ArrayList<HiddenColumn>();

  public Transform guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Unique identifier that defines SQL execution context for the given query, i.e. database server (SQL syntax rules),  database schema. The context itself must be saved in the user account on https://webapi.activequerybuilder.com/.
   * @return guid
  **/
  @ApiModelProperty(example = "null", value = "Unique identifier that defines SQL execution context for the given query, i.e. database server (SQL syntax rules),  database schema. The context itself must be saved in the user account on https://webapi.activequerybuilder.com/.")
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }

  public Transform sql(String sql) {
    this.sql = sql;
    return this;
  }

   /**
   * Text of original SQL query to be transformed.
   * @return sql
  **/
  @ApiModelProperty(example = "null", value = "Text of original SQL query to be transformed.")
  public String getSql() {
    return sql;
  }

  public void setSql(String sql) {
    this.sql = sql;
  }

  public Transform pagination(Pagination pagination) {
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @ApiModelProperty(example = "null", value = "")
  public Pagination getPagination() {
    return pagination;
  }

  public void setPagination(Pagination pagination) {
    this.pagination = pagination;
  }

  public Transform totals(List<Totals> totals) {
    this.totals = totals;
    return this;
  }

   /**
   * Get totals
   * @return totals
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Totals> getTotals() {
    return totals;
  }

  public void setTotals(List<Totals> totals) {
    this.totals = totals;
  }

  public Transform sortings(List<Sorting> sortings) {
    this.sortings = sortings;
    return this;
  }

   /**
   * Get sortings
   * @return sortings
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Sorting> getSortings() {
    return sortings;
  }

  public void setSortings(List<Sorting> sortings) {
    this.sortings = sortings;
  }

  public Transform filter(ConditionGroup filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @ApiModelProperty(example = "null", value = "")
  public ConditionGroup getFilter() {
    return filter;
  }

  public void setFilter(ConditionGroup filter) {
    this.filter = filter;
  }

  public Transform hiddenColumns(List<HiddenColumn> hiddenColumns) {
    this.hiddenColumns = hiddenColumns;
    return this;
  }

   /**
   * Get hiddenColumns
   * @return hiddenColumns
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<HiddenColumn> getHiddenColumns() {
    return hiddenColumns;
  }

  public void setHiddenColumns(List<HiddenColumn> hiddenColumns) {
    this.hiddenColumns = hiddenColumns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transform transform = (Transform) o;
    return Objects.equals(this.guid, transform.guid) &&
        Objects.equals(this.sql, transform.sql) &&
        Objects.equals(this.pagination, transform.pagination) &&
        Objects.equals(this.totals, transform.totals) &&
        Objects.equals(this.sortings, transform.sortings) &&
        Objects.equals(this.filter, transform.filter) &&
        Objects.equals(this.hiddenColumns, transform.hiddenColumns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(guid, sql, pagination, totals, sortings, filter, hiddenColumns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transform {\n");
    
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    sql: ").append(toIndentedString(sql)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    totals: ").append(toIndentedString(totals)).append("\n");
    sb.append("    sortings: ").append(toIndentedString(sortings)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    hiddenColumns: ").append(toIndentedString(hiddenColumns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

