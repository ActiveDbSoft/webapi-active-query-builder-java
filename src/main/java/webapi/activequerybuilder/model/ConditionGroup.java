/**
 * QueryBuilderApi
 * Active Query Builder Web API lets create, analyze and modify SQL queries for different database servers using RESTful HTTP requests to a cloud-based service. It requires SQL execution context (information about database schema and used database server) to be stored under the registered account at https://webapi.activequerybuilder.com/.
 *
 * OpenAPI spec version: 1.1.8
 * Contact: support@activedbsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package webapi.activequerybuilder.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import webapi.activequerybuilder.model.Condition;
import webapi.activequerybuilder.model.ConditionGroup;


/**
 * Group of conditions joined with the same boolean operator.
 */
@ApiModel(description = "Group of conditions joined with the same boolean operator.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-03T18:45:46.271+06:00")
public class ConditionGroup   {
  /**
   * Type of junction. All = AND; Any = OR.
   */
  public enum JunctionTypeEnum {
    AND("And"),
    
    OR("Or"),
    
    ANY("Any"),
    
    ALL("All");

    private String value;

    JunctionTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @JsonProperty("junctionType")
  private JunctionTypeEnum junctionType = null;

  @JsonProperty("conditions")
  private List<Condition> conditions = new ArrayList<Condition>();

  @JsonProperty("conditionGroups")
  private List<ConditionGroup> conditionGroups = new ArrayList<ConditionGroup>();

  public ConditionGroup junctionType(JunctionTypeEnum junctionType) {
    this.junctionType = junctionType;
    return this;
  }

   /**
   * Type of junction. All = AND; Any = OR.
   * @return junctionType
  **/
  @ApiModelProperty(example = "null", value = "Type of junction. All = AND; Any = OR.")
  public JunctionTypeEnum getJunctionType() {
    return junctionType;
  }

  public void setJunctionType(JunctionTypeEnum junctionType) {
    this.junctionType = junctionType;
  }

  public ConditionGroup conditions(List<Condition> conditions) {
    this.conditions = conditions;
    return this;
  }

   /**
   * List of conditions to join.
   * @return conditions
  **/
  @ApiModelProperty(example = "null", value = "List of conditions to join.")
  public List<Condition> getConditions() {
    return conditions;
  }

  public void setConditions(List<Condition> conditions) {
    this.conditions = conditions;
  }

  public ConditionGroup conditionGroups(List<ConditionGroup> conditionGroups) {
    this.conditionGroups = conditionGroups;
    return this;
  }

   /**
   * List of nested condition groups to join them with a different boolean operator.
   * @return conditionGroups
  **/
  @ApiModelProperty(example = "null", value = "List of nested condition groups to join them with a different boolean operator.")
  public List<ConditionGroup> getConditionGroups() {
    return conditionGroups;
  }

  public void setConditionGroups(List<ConditionGroup> conditionGroups) {
    this.conditionGroups = conditionGroups;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConditionGroup conditionGroup = (ConditionGroup) o;
    return Objects.equals(this.junctionType, conditionGroup.junctionType) &&
        Objects.equals(this.conditions, conditionGroup.conditions) &&
        Objects.equals(this.conditionGroups, conditionGroup.conditionGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(junctionType, conditions, conditionGroups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConditionGroup {\n");
    
    sb.append("    junctionType: ").append(toIndentedString(junctionType)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    conditionGroups: ").append(toIndentedString(conditionGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

